# Docker 安全配置
# Docker Security Configuration

version: '3.8'

services:
  # 前端開發服務器
  frontend:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    networks:
      - portfolio-network
    restart: unless-stopped
    # 安全設定
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/cache/nginx
      - /var/run

  # 後端 API 服務
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - PYTHONUNBUFFERED=1
    volumes:
      - ./api:/app:ro
    networks:
      - portfolio-network
    restart: unless-stopped
    # 安全設定
    security_opt:
      - no-new-privileges:true
    user: "1000:1000"
    # 資源限制
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    # 健康檢查
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (可選，用於快取)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - portfolio-network
    restart: unless-stopped
    # 安全設定
    security_opt:
      - no-new-privileges:true
    command: redis-server --requirepass ${REDIS_PASSWORD:-defaultpassword}
    volumes:
      - redis-data:/data
    # 資源限制
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

networks:
  portfolio-network:
    driver: bridge
    # 網路隔離
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"

volumes:
  redis-data:
    driver: local
